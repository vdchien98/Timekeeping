/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.docs.backend.model.impl;

import com.liferay.docs.backend.model.tudanhgia;
import com.liferay.docs.backend.model.tudanhgiaModel;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the tudanhgia service. Represents a row in the &quot;Timekeeping_tudanhgia&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>tudanhgiaModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link tudanhgiaImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see tudanhgiaImpl
 * @generated
 */
@JSON(strict = true)
public class tudanhgiaModelImpl
	extends BaseModelImpl<tudanhgia> implements tudanhgiaModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tudanhgia model instance should use the <code>tudanhgia</code> interface instead.
	 */
	public static final String TABLE_NAME = "Timekeeping_tudanhgia";

	public static final Object[][] TABLE_COLUMNS = {
		{"id_", Types.INTEGER}, {"user_id", Types.BIGINT},
		{"thongtintudanhgia", Types.VARCHAR}, {"ykienkhac", Types.VARCHAR},
		{"file_url", Types.VARCHAR}, {"tongdiem", Types.DOUBLE},
		{"trangthaixacnhan", Types.INTEGER}, {"trangthaikyso", Types.INTEGER},
		{"thang", Types.INTEGER}, {"nam", Types.INTEGER},
		{"phongban_id", Types.BIGINT}, {"xeploai", Types.VARCHAR},
		{"created_at", Types.TIMESTAMP}, {"updated_at", Types.TIMESTAMP}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id_", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("user_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("thongtintudanhgia", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ykienkhac", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("file_url", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tongdiem", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("trangthaixacnhan", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("trangthaikyso", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("thang", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("nam", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("phongban_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("xeploai", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("created_at", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("updated_at", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE =
		"create table Timekeeping_tudanhgia (id_ INTEGER not null primary key,user_id LONG,thongtintudanhgia VARCHAR(75) null,ykienkhac VARCHAR(75) null,file_url VARCHAR(75) null,tongdiem DOUBLE,trangthaixacnhan INTEGER,trangthaikyso INTEGER,thang INTEGER,nam INTEGER,phongban_id LONG,xeploai VARCHAR(75) null,created_at DATE null,updated_at DATE null)";

	public static final String TABLE_SQL_DROP =
		"drop table Timekeeping_tudanhgia";

	public static final String ORDER_BY_JPQL = " ORDER BY tudanhgia.id ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY Timekeeping_tudanhgia.id_ ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public tudanhgiaModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return tudanhgia.class;
	}

	@Override
	public String getModelClassName() {
		return tudanhgia.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<tudanhgia, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<tudanhgia, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<tudanhgia, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((tudanhgia)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<tudanhgia, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<tudanhgia, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(tudanhgia)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<tudanhgia, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<tudanhgia, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<tudanhgia, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<tudanhgia, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<tudanhgia, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<tudanhgia, Object>>();
		Map<String, BiConsumer<tudanhgia, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<tudanhgia, ?>>();

		attributeGetterFunctions.put("id", tudanhgia::getId);
		attributeSetterBiConsumers.put(
			"id", (BiConsumer<tudanhgia, Integer>)tudanhgia::setId);
		attributeGetterFunctions.put("user_id", tudanhgia::getUser_id);
		attributeSetterBiConsumers.put(
			"user_id", (BiConsumer<tudanhgia, Long>)tudanhgia::setUser_id);
		attributeGetterFunctions.put(
			"thongtintudanhgia", tudanhgia::getThongtintudanhgia);
		attributeSetterBiConsumers.put(
			"thongtintudanhgia",
			(BiConsumer<tudanhgia, String>)tudanhgia::setThongtintudanhgia);
		attributeGetterFunctions.put("ykienkhac", tudanhgia::getYkienkhac);
		attributeSetterBiConsumers.put(
			"ykienkhac",
			(BiConsumer<tudanhgia, String>)tudanhgia::setYkienkhac);
		attributeGetterFunctions.put("file_url", tudanhgia::getFile_url);
		attributeSetterBiConsumers.put(
			"file_url", (BiConsumer<tudanhgia, String>)tudanhgia::setFile_url);
		attributeGetterFunctions.put("tongdiem", tudanhgia::getTongdiem);
		attributeSetterBiConsumers.put(
			"tongdiem", (BiConsumer<tudanhgia, Double>)tudanhgia::setTongdiem);
		attributeGetterFunctions.put(
			"trangthaixacnhan", tudanhgia::getTrangthaixacnhan);
		attributeSetterBiConsumers.put(
			"trangthaixacnhan",
			(BiConsumer<tudanhgia, Integer>)tudanhgia::setTrangthaixacnhan);
		attributeGetterFunctions.put(
			"trangthaikyso", tudanhgia::getTrangthaikyso);
		attributeSetterBiConsumers.put(
			"trangthaikyso",
			(BiConsumer<tudanhgia, Integer>)tudanhgia::setTrangthaikyso);
		attributeGetterFunctions.put("thang", tudanhgia::getThang);
		attributeSetterBiConsumers.put(
			"thang", (BiConsumer<tudanhgia, Integer>)tudanhgia::setThang);
		attributeGetterFunctions.put("nam", tudanhgia::getNam);
		attributeSetterBiConsumers.put(
			"nam", (BiConsumer<tudanhgia, Integer>)tudanhgia::setNam);
		attributeGetterFunctions.put("phongban_id", tudanhgia::getPhongban_id);
		attributeSetterBiConsumers.put(
			"phongban_id",
			(BiConsumer<tudanhgia, Long>)tudanhgia::setPhongban_id);
		attributeGetterFunctions.put("xeploai", tudanhgia::getXeploai);
		attributeSetterBiConsumers.put(
			"xeploai", (BiConsumer<tudanhgia, String>)tudanhgia::setXeploai);
		attributeGetterFunctions.put("created_at", tudanhgia::getCreated_at);
		attributeSetterBiConsumers.put(
			"created_at",
			(BiConsumer<tudanhgia, Date>)tudanhgia::setCreated_at);
		attributeGetterFunctions.put("updated_at", tudanhgia::getUpdated_at);
		attributeSetterBiConsumers.put(
			"updated_at",
			(BiConsumer<tudanhgia, Date>)tudanhgia::setUpdated_at);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public int getId() {
		return _id;
	}

	@Override
	public void setId(int id) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_id = id;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public int getOriginalId() {
		return GetterUtil.getInteger(
			this.<Integer>getColumnOriginalValue("id_"));
	}

	@JSON
	@Override
	public long getUser_id() {
		return _user_id;
	}

	@Override
	public void setUser_id(long user_id) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_user_id = user_id;
	}

	@JSON
	@Override
	public String getThongtintudanhgia() {
		if (_thongtintudanhgia == null) {
			return "";
		}
		else {
			return _thongtintudanhgia;
		}
	}

	@Override
	public void setThongtintudanhgia(String thongtintudanhgia) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_thongtintudanhgia = thongtintudanhgia;
	}

	@JSON
	@Override
	public String getYkienkhac() {
		if (_ykienkhac == null) {
			return "";
		}
		else {
			return _ykienkhac;
		}
	}

	@Override
	public void setYkienkhac(String ykienkhac) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ykienkhac = ykienkhac;
	}

	@JSON
	@Override
	public String getFile_url() {
		if (_file_url == null) {
			return "";
		}
		else {
			return _file_url;
		}
	}

	@Override
	public void setFile_url(String file_url) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_file_url = file_url;
	}

	@JSON
	@Override
	public double getTongdiem() {
		return _tongdiem;
	}

	@Override
	public void setTongdiem(double tongdiem) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tongdiem = tongdiem;
	}

	@JSON
	@Override
	public int getTrangthaixacnhan() {
		return _trangthaixacnhan;
	}

	@Override
	public void setTrangthaixacnhan(int trangthaixacnhan) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_trangthaixacnhan = trangthaixacnhan;
	}

	@JSON
	@Override
	public int getTrangthaikyso() {
		return _trangthaikyso;
	}

	@Override
	public void setTrangthaikyso(int trangthaikyso) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_trangthaikyso = trangthaikyso;
	}

	@JSON
	@Override
	public int getThang() {
		return _thang;
	}

	@Override
	public void setThang(int thang) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_thang = thang;
	}

	@JSON
	@Override
	public int getNam() {
		return _nam;
	}

	@Override
	public void setNam(int nam) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nam = nam;
	}

	@JSON
	@Override
	public long getPhongban_id() {
		return _phongban_id;
	}

	@Override
	public void setPhongban_id(long phongban_id) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_phongban_id = phongban_id;
	}

	@JSON
	@Override
	public String getXeploai() {
		if (_xeploai == null) {
			return "";
		}
		else {
			return _xeploai;
		}
	}

	@Override
	public void setXeploai(String xeploai) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_xeploai = xeploai;
	}

	@JSON
	@Override
	public Date getCreated_at() {
		return _created_at;
	}

	@Override
	public void setCreated_at(Date created_at) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_created_at = created_at;
	}

	@JSON
	@Override
	public Date getUpdated_at() {
		return _updated_at;
	}

	@Override
	public void setUpdated_at(Date updated_at) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_updated_at = updated_at;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public tudanhgia toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, tudanhgia>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		tudanhgiaImpl tudanhgiaImpl = new tudanhgiaImpl();

		tudanhgiaImpl.setId(getId());
		tudanhgiaImpl.setUser_id(getUser_id());
		tudanhgiaImpl.setThongtintudanhgia(getThongtintudanhgia());
		tudanhgiaImpl.setYkienkhac(getYkienkhac());
		tudanhgiaImpl.setFile_url(getFile_url());
		tudanhgiaImpl.setTongdiem(getTongdiem());
		tudanhgiaImpl.setTrangthaixacnhan(getTrangthaixacnhan());
		tudanhgiaImpl.setTrangthaikyso(getTrangthaikyso());
		tudanhgiaImpl.setThang(getThang());
		tudanhgiaImpl.setNam(getNam());
		tudanhgiaImpl.setPhongban_id(getPhongban_id());
		tudanhgiaImpl.setXeploai(getXeploai());
		tudanhgiaImpl.setCreated_at(getCreated_at());
		tudanhgiaImpl.setUpdated_at(getUpdated_at());

		tudanhgiaImpl.resetOriginalValues();

		return tudanhgiaImpl;
	}

	@Override
	public tudanhgia cloneWithOriginalValues() {
		tudanhgiaImpl tudanhgiaImpl = new tudanhgiaImpl();

		tudanhgiaImpl.setId(this.<Integer>getColumnOriginalValue("id_"));
		tudanhgiaImpl.setUser_id(this.<Long>getColumnOriginalValue("user_id"));
		tudanhgiaImpl.setThongtintudanhgia(
			this.<String>getColumnOriginalValue("thongtintudanhgia"));
		tudanhgiaImpl.setYkienkhac(
			this.<String>getColumnOriginalValue("ykienkhac"));
		tudanhgiaImpl.setFile_url(
			this.<String>getColumnOriginalValue("file_url"));
		tudanhgiaImpl.setTongdiem(
			this.<Double>getColumnOriginalValue("tongdiem"));
		tudanhgiaImpl.setTrangthaixacnhan(
			this.<Integer>getColumnOriginalValue("trangthaixacnhan"));
		tudanhgiaImpl.setTrangthaikyso(
			this.<Integer>getColumnOriginalValue("trangthaikyso"));
		tudanhgiaImpl.setThang(this.<Integer>getColumnOriginalValue("thang"));
		tudanhgiaImpl.setNam(this.<Integer>getColumnOriginalValue("nam"));
		tudanhgiaImpl.setPhongban_id(
			this.<Long>getColumnOriginalValue("phongban_id"));
		tudanhgiaImpl.setXeploai(
			this.<String>getColumnOriginalValue("xeploai"));
		tudanhgiaImpl.setCreated_at(
			this.<Date>getColumnOriginalValue("created_at"));
		tudanhgiaImpl.setUpdated_at(
			this.<Date>getColumnOriginalValue("updated_at"));

		return tudanhgiaImpl;
	}

	@Override
	public int compareTo(tudanhgia tudanhgia) {
		int primaryKey = tudanhgia.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof tudanhgia)) {
			return false;
		}

		tudanhgia tudanhgia = (tudanhgia)object;

		int primaryKey = tudanhgia.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<tudanhgia> toCacheModel() {
		tudanhgiaCacheModel tudanhgiaCacheModel = new tudanhgiaCacheModel();

		tudanhgiaCacheModel.id = getId();

		tudanhgiaCacheModel.user_id = getUser_id();

		tudanhgiaCacheModel.thongtintudanhgia = getThongtintudanhgia();

		String thongtintudanhgia = tudanhgiaCacheModel.thongtintudanhgia;

		if ((thongtintudanhgia != null) && (thongtintudanhgia.length() == 0)) {
			tudanhgiaCacheModel.thongtintudanhgia = null;
		}

		tudanhgiaCacheModel.ykienkhac = getYkienkhac();

		String ykienkhac = tudanhgiaCacheModel.ykienkhac;

		if ((ykienkhac != null) && (ykienkhac.length() == 0)) {
			tudanhgiaCacheModel.ykienkhac = null;
		}

		tudanhgiaCacheModel.file_url = getFile_url();

		String file_url = tudanhgiaCacheModel.file_url;

		if ((file_url != null) && (file_url.length() == 0)) {
			tudanhgiaCacheModel.file_url = null;
		}

		tudanhgiaCacheModel.tongdiem = getTongdiem();

		tudanhgiaCacheModel.trangthaixacnhan = getTrangthaixacnhan();

		tudanhgiaCacheModel.trangthaikyso = getTrangthaikyso();

		tudanhgiaCacheModel.thang = getThang();

		tudanhgiaCacheModel.nam = getNam();

		tudanhgiaCacheModel.phongban_id = getPhongban_id();

		tudanhgiaCacheModel.xeploai = getXeploai();

		String xeploai = tudanhgiaCacheModel.xeploai;

		if ((xeploai != null) && (xeploai.length() == 0)) {
			tudanhgiaCacheModel.xeploai = null;
		}

		Date created_at = getCreated_at();

		if (created_at != null) {
			tudanhgiaCacheModel.created_at = created_at.getTime();
		}
		else {
			tudanhgiaCacheModel.created_at = Long.MIN_VALUE;
		}

		Date updated_at = getUpdated_at();

		if (updated_at != null) {
			tudanhgiaCacheModel.updated_at = updated_at.getTime();
		}
		else {
			tudanhgiaCacheModel.updated_at = Long.MIN_VALUE;
		}

		return tudanhgiaCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<tudanhgia, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<tudanhgia, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<tudanhgia, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((tudanhgia)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<tudanhgia, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<tudanhgia, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<tudanhgia, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((tudanhgia)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, tudanhgia>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					tudanhgia.class, ModelWrapper.class);

	}

	private int _id;
	private long _user_id;
	private String _thongtintudanhgia;
	private String _ykienkhac;
	private String _file_url;
	private double _tongdiem;
	private int _trangthaixacnhan;
	private int _trangthaikyso;
	private int _thang;
	private int _nam;
	private long _phongban_id;
	private String _xeploai;
	private Date _created_at;
	private Date _updated_at;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<tudanhgia, Object> function = _attributeGetterFunctions.get(
			columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((tudanhgia)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("id_", _id);
		_columnOriginalValues.put("user_id", _user_id);
		_columnOriginalValues.put("thongtintudanhgia", _thongtintudanhgia);
		_columnOriginalValues.put("ykienkhac", _ykienkhac);
		_columnOriginalValues.put("file_url", _file_url);
		_columnOriginalValues.put("tongdiem", _tongdiem);
		_columnOriginalValues.put("trangthaixacnhan", _trangthaixacnhan);
		_columnOriginalValues.put("trangthaikyso", _trangthaikyso);
		_columnOriginalValues.put("thang", _thang);
		_columnOriginalValues.put("nam", _nam);
		_columnOriginalValues.put("phongban_id", _phongban_id);
		_columnOriginalValues.put("xeploai", _xeploai);
		_columnOriginalValues.put("created_at", _created_at);
		_columnOriginalValues.put("updated_at", _updated_at);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("id_", "id");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("id_", 1L);

		columnBitmasks.put("user_id", 2L);

		columnBitmasks.put("thongtintudanhgia", 4L);

		columnBitmasks.put("ykienkhac", 8L);

		columnBitmasks.put("file_url", 16L);

		columnBitmasks.put("tongdiem", 32L);

		columnBitmasks.put("trangthaixacnhan", 64L);

		columnBitmasks.put("trangthaikyso", 128L);

		columnBitmasks.put("thang", 256L);

		columnBitmasks.put("nam", 512L);

		columnBitmasks.put("phongban_id", 1024L);

		columnBitmasks.put("xeploai", 2048L);

		columnBitmasks.put("created_at", 4096L);

		columnBitmasks.put("updated_at", 8192L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private tudanhgia _escapedModel;

}